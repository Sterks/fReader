version: "3"
services:

  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./config/rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
    networks:
      - db-network

  mongodb:
    image: "mongo:latest"
    container_name: "mongodb"
    environment:
      - MONGO_INITDB_DATABASE=readerXML
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    ports:
      - "27017-27019:27017-27019"
    volumes:
      - mongodb_data_container:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - db-network

  Postgres:
    image: postgres
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    command: postgres -c 'max_connections=500'
    restart: always
    networks:
      - db-network
    environment:
      - PGDATA=/var/lib/postgresql/data
      - POSTGRES_USER=user_ro
      - POSTGRES_PASSWORD=4r2w3e1q
      - POSTGRES_DB=freader
    ports:
      - "5432:5432"
  
  freader:
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mongodb
      - Postgres
    networks:
      - db-network
    volumes:
      - "files_data:/Files"
    ports:
      - "8080:8080"
    environment:
      - GOLANG=production
  
  unzipper:
    build:
      context: ../rXmlReader
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - mongodb
      - Postgres
      - freader
    networks:
      - db-network

networks:
  db-network:
volumes:
  postgres_data:
  mongodb_data_container:
  files_data: